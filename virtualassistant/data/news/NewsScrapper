import java.io.IOException;  
import org.jsoup.Jsoup;  
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import java.util.*;

public class NewsScrapper{

	private ArrayList<newsObj> articlesObjs = new ArrayList<newsObj>(); // arraylist of news articles objects

	private class newsObj{  // possibly in another file ????
		private String DateTime;
		private String title;
		private String impact;
		private String url;
		private String source;

		public newsObj(String time, String title, String impact, String url,String source){ // for Rns news
			this.DateTime = time;
			this.title = title;
			this.impact = impact;
			this.url = url;
			this.source = source;
		}

		public newsObj(String time, String title, String url){ // for alliance news as it doesnt have an impact %
			this.DateTime = time;
			this.title = title;
			this.url = url;
			this.source = "allianceNews";
		}

		public String getDateTime(){
			return this.DateTime;
		}
		public String getTitle(){
			return this.title;
		}
		public String getImpact(){
			return this.impact;
		}
		public String getUrl(){
			return this.url;
		}
		public String getSource(){
			return this.source;
		}
	}


	public ArrayList<newsObj> getRnsNews(String company) { 
		for(int i=1;i<=6;i++){ // loop to go through each page and get the isin number of the company wanted.
			try {
				final Document doc = Jsoup.connect("http://www.londonstockexchange.com/exchange/prices-and-markets/stocks/indices/constituents-indices.html?index=UKX&industrySector=&page=" + i).get();
				for(Element li: doc.select(".table_dati tr")){ // going through each list item and adding the article into the arraylist
					if(li.select(".name:eq(0)").text().equals(company)){
						String kk = li.select(".name:eq(1)").first().select(".name a").attr("href");
						rnsNewsArticleGetter(isinNumberGetter(kk)); // We've got the isin number now get all the news from it
						i=6; // break out of loop once the company has been found.
					}
				}
			} catch(IOException e){ // will be handled later

			}
		}
		return articlesObjs;
	}

	private void rnsNewsArticleGetter(String webpage) {
		try {
			final Document doc = Jsoup.connect(webpage).get(); // all the articles from lse new analysis is gotten. 
			for(Element row: doc.select(".table_datinews tr")){ // loop of articles in the table row is done
				final String title = row.select(".text-left a").text();
				final String time = row.select(".datetime.nowrap").text();
				final String source = row.select(".nowrap.text-left").get(1).text();
				final Element impactE = row.select(".nowrap.text-left").get(2);
				final String impact = impactE.text();
				final Element url = row.select(".text-left a").first();
				final String relHref = url.attr("href");
				final String absurl=javascriptLinkToUrl(relHref); // html link is a javascript script so need to use regex to get the link out.
				articlesObjs.add(newsArrayAdder(time,title,impact,absurl,source)); // news article object added to arraylist

				System.out.println(time + "     " + title + "   " + impact + "  " + absurl + "   " + source);  // FOR TESTING ONLY WILL BE REMOVED
			}
		}catch(IOException e){ // will be handled later

		}
	}

	private String isinNumberGetter(String webPageLink){	 // used to get the isin Number of the company and return the webpage for that company	
		final Pattern pattern = Pattern.compile("/summary/company-summary/(.*?).html"); // regex used to get the part of link needed (the isin number).
		final Matcher matcher = pattern.matcher(webPageLink);
		String absoluteUrl = "";
		while(matcher.find()){
			absoluteUrl = "http://www.londonstockexchange.com/exchange/prices-and-markets/stocks/exchange-insight/news-analysis.html?fourWayKey=" + matcher.group(1);
		}
		return absoluteUrl; // returns the url needed
	}

	private String javascriptLinkToUrl(String jsUrl){	 // used to convert a javascript link into an actual usable url
		final Pattern pattern = Pattern.compile("'/exchange/news/(.*?).html"); // regex used to get the part of link needed.
		final Matcher matcher = pattern.matcher(jsUrl);
		String absurl = "";
		while(matcher.find()){
			absurl = "http://www.londonstockexchange.com/exchange/news/" + matcher.group(1) +".html";
		}
		return absurl;
	}

	public ArrayList<newsObj> getAllianceNews(String company) {
		try {
			final Document doc = Jsoup.connect("http://www.londonstockexchange.com/exchange/news/alliance-news/company-news.html?tidm=" + company).get();

			for(Element li: doc.select("ul li")){ // going through each list item and adding the article into the arraylist
				final String title = (li.select("a").text());
				final String url = "http://www.londonstockexchange.com" + li.select("a").first().attr("href");
				final String time = li.select(".hour").text();
				articlesObjs.add(newsArrayAdder(time,title,url));  //articles are added to the array list as objects.
				System.out.println(time + "               " + title + "                " + url);  // FOR TESTING ONLY WILL BE REMOVED
			}

		} catch(IOException e){ // will be handled later

		}
		return articlesObjs;
	}

	private newsObj newsArrayAdder(String time, String title, String url){ // used to make objects of news articles. 
		newsObj c = new newsObj(time,title,url);
		return c;
	}

	private newsObj newsArrayAdder(String time, String title, String impact, String url,String source){ // creates objects for each rns news article
		newsObj c = new newsObj(time,title,impact,url,source);
		return c;
	}
}
